generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model RFP {
  id         String   @id
  businessName String
  contactName String
  email      String
  phone      String?
  
  numBankAccounts String?
  numCreditCards String?
  monthlyTransactions String?
  hasPayroll String?
  hasInventory String?
  currentBookkeeping String?
  biggestPainPoint String?
  
  preferredTime String?
  additionalInfo String? @db.NVarChar(Max)
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model users {
  id         String   @id
  email      String   @unique
  password   String
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  plaid_items plaid_items[]
  accounts    accounts[]
}

model plaid_items {
  id          String   @id
  accessToken String   @unique
  itemId      String   @unique
  userId      String
  user        users    @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  accounts    accounts[]
}

model accounts {
  id            String    @id
  accountId     String    @unique
  name          String
  officialName  String?
  type          String
  subtype       String?
  mask          String?
  currentBalance Float?
  availableBalance Float?
  isoCurrencyCode String?
  
  plaidItemId   String
  plaidItem     plaid_items @relation(fields: [plaidItemId], references: [id])
  
  userId        String
  user          users      @relation(fields: [userId], references: [id])
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  transactions  transactions[]
}

model transactions {
  id              String   @id
  transactionId   String   @unique
  accountId       String
  account         accounts  @relation(fields: [accountId], references: [id])
  amount          Float
  date            DateTime
  name            String
  merchantName    String?
  category        String?   @db.NVarChar(Max)
  pending         Boolean  @default(false)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
